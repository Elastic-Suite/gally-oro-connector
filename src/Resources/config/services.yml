imports:
    - { resource: services/sdk.yml }

parameters:
    gally: # Todo manage conf from DNS Env var
        baseUri: 'https://api.gally.local'
        user: 'admin@example.com'
        password: 'apassword'

services:
    Gally\OroPlugin\Provider\CatalogProvider:
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@oro_website.provider.website_localization'
            - '@oro_pricing.provider.website_currency_provider'

    Gally\OroPlugin\Provider\SourceFieldProvider:
        arguments:
            - '@oro_website_search.provider.search_mapping'
            - '@oro_entity.entity_alias_resolver'
            - '@oro_entity_config.provider.entity'
            - '@Gally\OroPlugin\Provider\CatalogProvider'
            - '@oro_website_search.placeholder.registry'
            - '@translator'
            - '@oro_locale.settings'

    Gally\OroPlugin\Provider\SourceFieldOptionProvider:
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@oro_website.provider.website_localization'
            - '@oro_pricing.provider.website_currency_provider'

    Gally\OroPlugin\Command\StructureSync:
        arguments:
            - '@Gally\OroPlugin\Provider\CatalogProvider'
            - '@Gally\OroPlugin\Provider\SourceFieldProvider'
            - '@Gally\OroPlugin\Provider\SourceFieldOptionProvider'
            - '@Gally\Sdk\Service\StructureSynchonizer'
        tags:
            - { name: console.command }

    Gally\OroPlugin\EventListener\WebsiteSearchWebCatalogIndexerListener:
        arguments:
            - '@oro_website_search.manager.website_context_manager'
            - '@doctrine'
            - '@oro_web_catalog.web_catalog_provider'
            - '@oro_locale.helper.localization'
        tags:
            - { name: kernel.event_listener, event: oro_website_search.event.index_entity.contentnode, method: onWebsiteSearchIndex, priority: -255 }

    Gally\OroPlugin\EventListener\WebsiteSearchInventoryLevelIndexerListener:
        arguments:
            - '@doctrine'
            - '@oro_warehouse.provider.enabled_warehouses_provider'
        tags:
            - { name: kernel.event_listener, event: oro_website_search.event.index_entity.product, method: onWebsiteSearchIndex, priority: -255 }

    oro_website_search.engine.gally.index_data:
        class: 'Gally\OroPlugin\Engine\IndexDataProvider'
        arguments:
            - '@event_dispatcher'
            - '@oro_entity.entity_alias_resolver'
            - '@oro_website_search.placeholder_decorator'
            - '@oro_ui.html_tag_helper'
            - '@oro_website_search.helper.placeholder_helper'
            - '@oro_entity.doctrine_helper'
            - '@oro_locale.helper.localization'

    oro_website_search.gally.indexer:
        class: 'Gally\OroPlugin\Engine\GallyIndexer'
        arguments:
            - '@oro_entity.doctrine_helper'
            - '@oro_website_search.provider.search_mapping'
            - '@oro_website_search.engine.entity_dependencies_resolver'
            - '@oro_website_search.engine.gally.index_data'
            - '@oro_website_search.placeholder_decorator'
            - '@oro_website_search.indexer.input_validator'
            - '@event_dispatcher'
            - '@oro_website_search.regex_placeholder_decorator'
            - '@oro_website.provider.website_localization'
            - '@oro_web_catalog.web_catalog_provider'
            - '@Gally\OroPlugin\Provider\CatalogProvider'
            - '@Gally\OroPlugin\Provider\SourceFieldProvider'
            - '@Gally\Sdk\Service\IndexOperation'
#        calls:
#            - ['setLogger', ['@logger']]
#            - ['setBatchSize', ['%oro_website_search.indexer_batch_size%']]
        tags:
            - { name: 'oro_website_search.engine.indexer', engine_name: 'gally' }

    oro_website_search.gally.engine:
        class: 'Oro\Bundle\WebsiteElasticSearchBundle\Engine\ElasticSearchEngine'
        arguments:
            - '@event_dispatcher'
            - '@oro_website_search.resolver.query_placeholder'
            - '@oro_website_search.provider.search_mapping'
            - '@oro_website_elastic_search.engine.index_agent'
            - '@oro_website_elastic_search.request_builder.registry'
        calls:
            - ['setMapper', ['@oro_website_search.engine.mapper']]
            - ['setPlaceholderHelper', ['@oro_website_search.helper.placeholder_helper']]
        tags:
            - { name: 'oro_website_search.engine', engine_name: 'gally' }

    Gally\OroPlugin\Decorator\ProductIndexFieldsProvider:
        decorates: oro_product.provider.index_fields
        arguments:
            - '@.inner'

    oro_product.provider.index_fields:
        class: 'Oro\Bundle\ProductBundle\Search\ProductIndexFieldsProvider'
        public: false
        # These attributes are forced to be indexed as a separate fields because they are used at main product grid of front store
        calls:
            - [addForceIndexed,  ['sku']]
            - [addForceIndexed,  ['names']]
            - [addForceIndexed,  ['shortDescriptions']]
            - [addForceIndexed,  ['newArrival']]

#    oro_website_search.driver.customer_partial_update_driver.gally:
#        class: 'Oro\Bundle\CustomerProBundle\Driver\ElasticSearchCustomerPartialUpdateDriver'
#        arguments:
#            - '@oro_website_search.provider.placeholder_provider'
#            - '@oro_visibility.visibility.provider.product_visibility_provider'
#            - '@oro_entity.doctrine_helper'
#            - '@oro_website_elastic_search.partial_update.manager'
#        tags:
#            - { name: 'oro_website_search.customer_partial_update_driver', engine_name: 'gally' }
#
#    oro_website_elasticsearch.engine.parameters_provider:
#        class: 'Gally\OroPlugin\Provider\GallyEngineParametersProvider'
#        public: true
#        arguments:
#            - '@oro_website_search.engine.parameters'
#            - '@parameter_bag'
#            - 'oro_website_search.engine_parameters'

#    oro_website_elastic_search.attribute.filter.attribute_mapping_filter:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\Attribute\Filter\AttributeMappingFilter
#        arguments:
#            - '@doctrine'

#    oro_website_elastic_search.engine.index_agent:
#        class: 'Oro\Bundle\WebsiteElasticSearchBundle\Engine\IndexAgent'
#        public: false
#        arguments:
#            - '@oro_website_elastic_search.client.factory'
#            - '@oro_elasticsearch.requirements_checker'
#            - '@oro_website_search.provider.search_mapping'
#            - "@=service('oro_website_elasticsearch.engine.parameters_provider').getEngineParameters()"
#            - '@oro_website_search.regex_placeholder_decorator'
#            - '@oro_website_search.website_id.placeholder'
#            - '@oro_website.provider.website_localization'
#            - '@oro_website_elastic_search.attribute.filter.attribute_mapping_filter'
#            - '@event_dispatcher'
#        calls:
#            - ['setLanguageAnalyzers', ['%oro_elasticsearch.language_analyzers%']]
#            - ['setFieldTypeMapping', ['%oro_elasticsearch.field_type_mapping%']]
#            - ['setLogger', ['@logger']]

#    oro_website_elastic_search.reindexation_website_provider:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\Provider\ReindexationWebsiteProvider
#        decorates: oro_website_search.reindexation_website_provider
#        arguments:
#            - '@.inner'
#            - '@doctrine'

#    oro_website_elastic_search.result_set_iterator.factory:
#        class: Oro\Bundle\ElasticSearchBundle\ResultSetIterator\ResultSetIteratorFactory
#        arguments:
#            - '@oro_website_elastic_search.engine.index_agent'
#
#    oro_website_elastic_search.checker.voter.fuzzy_search:
#        class: Oro\Bundle\ElasticSearchBundle\Checker\Voter\FuzzySearchVoter
#        arguments:
#            - '@oro_website_search.engine.parameters'
#            - 'storefront_fuzzy_search'
#        tags:
#            - { name: oro_featuretogle.voter }
#
#    oro_website_elastic_search.command.synonyms_refresh:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\Command\SynonymsRefreshCommand
#        arguments:
#            - '@oro_website_elastic_search.manager.synonyms_manager'
#        tags:
#            - { name: console.command }
#
#    oro_website_elastic_search.manager.synonyms_manager:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\Manager\SynonymsManager
#        arguments:
#            - '@oro_website_elastic_search.engine.index_agent'
#            - '@oro_website_elastic_search.provider.real_index_name'
#            - '@oro_website.website.provider'
#            - '@oro_website_elastic_search.provider.synonyms_aware_entities'
#            - '@oro_website_elastic_search.provider.synonyms'
#        calls:
#            - [setLogger, ['@logger']]
#        tags:
#            - { name: monolog.logger, channel: oro_website_elastic_search }
#
#    oro_website_elastic_search.event_listener.synonym:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\EventListener\Entity\SynonymListener
#        arguments:
#            - '@oro_website_elastic_search.manager.synonyms_manager'
#        tags:
#            - { name: doctrine.orm.entity_listener, entity: 'Oro\Bundle\WebsiteElasticSearchBundle\Entity\Synonym', event: postPersist }
#            - { name: doctrine.orm.entity_listener, entity: 'Oro\Bundle\WebsiteElasticSearchBundle\Entity\Synonym', event: postUpdate }
#            - { name: doctrine.orm.entity_listener, entity: 'Oro\Bundle\WebsiteElasticSearchBundle\Entity\Synonym', event: postRemove }
#            - { name: doctrine.event_listener, event: postFlush }
#
#    oro_website_elastic_search.event_listener.synonym_index_settings:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\EventListener\SynonymIndexSettingsEventListener
#        arguments:
#            - '@oro_website_elastic_search.provider.synonyms'
#            - '@oro_website_elastic_search.provider.synonyms_aware_entities'
#        tags:
#            - { name: kernel.event_listener, event: oro_website_elastic_search.index_settings, method: onIndexSettings }
#
#    oro_website_elastic_search.event_listener.config.change_synonyms_config:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\EventListener\Config\ChangeSynonymsConfigListener
#        arguments:
#            - '@oro_website_elastic_search.manager.synonyms_manager'
#        tags:
#            - { name: kernel.event_listener, event: oro_config.update_after, method: onConfigUpdate }
#            - { name: oro_featuretogle.feature, feature: elastic_search_engine }
#
#    oro_website_elastic_search.provider.synonyms_aware_entities:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\Provider\SynonymsAwareEntitiesProvider
#        arguments:
#            - '@oro_website_search.provider.search_mapping'
#            - '@oro_entity.entity_alias_resolver'
#
#    oro_website_elastic_search.provider.synonyms:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\Provider\SynonymsProvider
#        arguments:
#            - '@doctrine'
#            - '@oro_entity.entity_alias_resolver'
#            - '@oro_config.manager'
#            - '@oro_website_elastic_search.util.synonyms_sanitizer'
#        calls:
#            - [setLogger, ['@logger']]
#        tags:
#            - { name: monolog.logger, channel: oro_website_elastic_search }
#
#    oro_website_elastic_search.util.synonyms_sanitizer:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\Util\SynonymsSanitizer
#
#    oro_website_elastic_search.validator.synonym_aware_entity_aliases:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\Validator\Constraints\SynonymAwareEntityAliasesValidator
#        arguments:
#            - '@oro_website_elastic_search.provider.synonyms_aware_entities'
#        tags:
#            - { name: validator.constraint_validator }
#
#    oro_website_elastic_search.event_listener.synonym_grid_listener:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\EventListener\SynonymGridListener
#        arguments:
#            - '@oro_website_elastic_search.provider.synonyms_aware_entities'
#        tags:
#            - { name: kernel.event_listener, event: oro_datagrid.datagrid.build.before.websitesearch-synonym-grid, method: onBuildBefore }
#
#    oro_website_elastic_search.formatter.elasticsearch_decimal_flat_value_formatter:
#        class: 'Oro\Bundle\ElasticSearchBundle\Formatter\ElasticsearchDecimalFlatValueFormatter'
#        decorates: 'oro_website_search.formatter.decimal_flat_value_formatter'
#        arguments:
#            - '@.inner'
#            - '@oro_website_search.engine.parameters'
#
#    oro_website_elastic_search.provider.stop_words:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\Provider\StopWordsProvider
#        arguments:
#            - '@doctrine'
#            - '@oro_config.manager'
#
#    oro_website_elastic_search.event_listener.config.change_stop_words_config:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\EventListener\Config\ChangeStopWordsConfigListener
#        arguments:
#            - '@oro_website_elastic_search.manager.stop_words_manager'
#        tags:
#            - { name: kernel.event_listener, event: oro_config.update_after, method: onConfigUpdate }
#            - { name: oro_featuretogle.feature, feature: elastic_search_engine }
#
#    oro_website_elastic_search.manager.stop_words_manager:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\Manager\StopWordsManager
#        arguments:
#            - '@oro_website_elastic_search.engine.index_agent'
#            - '@oro_website_elastic_search.provider.real_index_name'
#            - '@oro_website.website.provider'
#            - '@oro_website_elastic_search.provider.stop_words_aware_entities'
#            - '@oro_website_elastic_search.provider.stop_words'
#        calls:
#            - [setLogger, ['@logger']]
#        tags:
#            - { name: monolog.logger, channel: oro_website_elastic_search }
#
#    oro_website_elastic_search.provider.stop_words_aware_entities:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\Provider\StopWordsAwareEntitiesProvider
#        arguments:
#            - '@oro_website_search.provider.search_mapping'
#
#    oro_website_elastic_search.command.stop_words_refresh:
#        class: Oro\Bundle\WebsiteElasticSearchBundle\Command\StopWordsRefreshCommand
#        arguments:
#            - '@oro_website_elastic_search.manager.stop_words_manager'
#        tags:
#            - { name: console.command }
